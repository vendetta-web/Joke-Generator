{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/code-hub/jokegenerator/src/jokeGenerator.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport { Box, Paper, Grid, Typography, makeStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    backgroundColor: \"#74b9ff\"\n  }\n}));\nexport const renderText = _ref => {\n  let {\n    label,\n    varnt,\n    comp,\n    color,\n    align\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: varnt ? varnt : \"body1\",\n    component: comp ? comp : \"h6\",\n    color: color ? color : \"primary\",\n    align: align ? align : \"center\",\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\nfunction jokeGenerator() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      sm: 7,\n      lg: 6,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        component: Box,\n        p: 2,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          mb: 4,\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83E\\uDD70\\uD83D\\uDE0B\\uD83E\\uDD70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), renderText({\n          label: \"Joke Generator\",\n          color: \"textPrimary\",\n          varnt: \"h4\",\n          comp: \"h6\"\n        }), /*#__PURE__*/_jsxDEV(Box, {\n          children: [renderText({\n            label: \"Joke Generator\",\n            color: \"textPrimary\",\n            varnt: \"h4\",\n            comp: \"h6\"\n          }), renderText({\n            label: \"Joke Generator\",\n            color: \"textPrimary\",\n            varnt: \"h4\",\n            comp: \"h6\"\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          mb: 4,\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"medium\",\n            children: [\" \", \"Generate Jokes\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(jokeGenerator, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\nexport default jokeGenerator;","map":{"version":3,"sources":["/home/saurabh/code-hub/jokegenerator/src/jokeGenerator.jsx"],"names":["Box","Paper","Grid","Typography","makeStyles","Button","React","useStyles","theme","root","width","height","display","justifyContent","alignContent","backgroundColor","renderText","label","varnt","comp","color","align","jokeGenerator","classes"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Paper,\n  Grid,\n  Typography,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    backgroundColor: \"#74b9ff\",\n  },\n}));\n\nexport const renderText = ({ label, varnt, comp, color, align }) => (\n  <Typography\n    variant={varnt ? varnt : \"body1\"}\n    component={comp ? comp : \"h6\"}\n    color={color ? color : \"primary\"}\n    align={align ? align : \"center\"}\n  >\n    {label}\n  </Typography>\n);\n\nfunction jokeGenerator() {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={10} sm={7} lg={6}>\n        <Paper component={Box} p={2}>\n          <Box display=\"flex\" justifyContent=\"center\" mb={4} mt={3}>\n            <h1>ðŸ¥°ðŸ˜‹ðŸ¥°</h1>\n          </Box>\n          {renderText({ label: \"Joke Generator\", color: \"textPrimary\", varnt:\"h4\", comp:\"h6\" })}\n\n          <Box>\n          {renderText({ label: \"Joke Generator\", color: \"textPrimary\", varnt:\"h4\", comp:\"h6\" })}\n          {renderText({ label: \"Joke Generator\", color: \"textPrimary\", varnt:\"h4\", comp:\"h6\" })}\n\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\" mb={4} mt={3}>\n            <Button variant=\"contained\" color=\"primary\" size=\"medium\">\n              {\" \"}\n              Generate Jokes{\" \"}\n            </Button>\n          </Box>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default jokeGenerator;\n"]},"metadata":{},"sourceType":"module"}